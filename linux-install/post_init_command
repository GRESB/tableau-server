#!/usr/bin/env bash

say() {
  echo
  echo "==> ${1}"
  echo
}

configure_primary() {
  say "Configure node 1"

  local node=node1

  # Processes ordered according to docs/images/3-node-topology.png diagram
  tsm topology set-process -n "${node}" -pr gateway -c 1
  tsm topology set-process -n "${node}" -pr vizportal  -c 0
  tsm topology set-process -n "${node}" -pr vizqlserver -c 0
  tsm topology set-process -n "${node}" -pr cacheserver -c 0
  tsm topology set-process -n "${node}" -pr backgrounder -c 0
  tsm topology set-process -n "${node}" -pr dataserver -c 0
  # Tableau Prep Conductor process is managed automatically
  # tsm topology set-process -n "${node}" -pr flowprocessor -c 0
  tsm topology set-process -n "${node}" -pr floweditor -c 0
  tsm topology set-process -n "${node}" -pr flowminerva -c 0
  # Ask Data process cannot be manually configured
  tsm topology set-process -n "${node}" -pr indexandsearchserver -c 0
  tsm topology set-process -n "${node}" -pr metrics -c 0
  tsm topology set-process -n "${node}" -pr activemqserver -c 0
  tsm topology set-process -n "${node}" -pr tdsservice -c 0
  tsm topology set-process -n "${node}" -pr tdsnativeservice -c 0
  tsm topology set-process -n "${node}" -pr contentexploration -c 0
  tsm topology set-process -n "${node}" -pr collections -c 0
  # Interactive Microservice Container process is managed automatically with vizportal and backgrounder
  # Non-Interactive Microservice Container process is managed automatically with vizportal and backgrounder
  # Data Engine process cannot be manually configured
  # Note: Can't disable filestore now, that will be done as the last operation
  # tsm topology set-process -n "${node}" -pr filestore -c 0
  tsm topology set-process -n "${node}" -pr pgsql -c 0
  # TSM Controller / Administration Controller process cannot be manually configured
  # License Server / License Manager process cannot be manually configured
  # Activation Service process cannot be manually configured
  tsm topology set-process -n "${node}" -pr clustercontroller -c 1
  # Coordination Service process cannot be set with set-process
  tsm topology set-process -n "${node}" -pr clientfileservice -c 1
}



configure_worker() {
  local node=${1}

  say "Configure processes for ${node}"
  # Processes ordered according to docs/images/3-node-topology.png diagram
  tsm topology set-process -n "${node}" -pr gateway -c 1
  tsm topology set-process -n "${node}" -pr vizportal  -c 2
  tsm topology set-process -n "${node}" -pr vizqlserver -c 2
  tsm topology set-process -n "${node}" -pr cacheserver -c 2
  tsm topology set-process -n "${node}" -pr backgrounder -c 2
  tsm topology set-process -n "${node}" -pr dataserver -c 2
  # Tableau Prep Conductor process is managed automatically
  # tsm topology set-process -n "${node}" -pr flowprocessor -c 0
  tsm topology set-process -n "${node}" -pr floweditor -c 1
  tsm topology set-process -n "${node}" -pr flowminerva -c 1
  # Ask Data process cannot be manually configured
  tsm topology set-process -n "${node}" -pr indexandsearchserver -c 1
  tsm topology set-process -n "${node}" -pr metrics -c 1
  tsm topology set-process -n "${node}" -pr activemqserver -c 1
  tsm topology set-process -n "${node}" -pr tdsservice -c 1
  tsm topology set-process -n "${node}" -pr tdsnativeservice -c 1
  tsm topology set-process -n "${node}" -pr contentexploration -c 1
  tsm topology set-process -n "${node}" -pr collections -c 1
  # Interactive Microservice Container process is managed automatically with vizportal and backgrounder
  # Non-Interactive Microservice Container process is managed automatically with vizportal and backgrounder
  # Data Engine process cannot be manually configured
  tsm topology set-process -n "${node}" -pr filestore -c 1
  tsm topology set-process -n "${node}" -pr pgsql -c 1
  tsm topology set-process -n "${node}" -pr clustercontroller -c 1
  # Coordination Service process cannot be set with set-process
  tsm topology set-process -n "${node}" -pr clientfileservice -c 1
}

wait_for_nodes() {
  local nodes

  nodes="$( tsm topology list-nodes )"
  # Loop until tsm topology list-nodes prints al 3 nodes
  while [[ "${nodes}" != *"node1"* || "${nodes}" != *"node2"* || "${nodes}" != *"node3"* ]]; do
    say "Waiting for worker nodes to be ready, current node list is: ${nodes}"
    sleep 5
    nodes="$( tsm topology list-nodes )"
  done
  say "All nodes are ready, current node list is: ${nodes}"
}

set -e

wait_for_nodes

say "Start cluster controller on node2 and node 3"
tsm topology set-process -n node2 -pr clustercontroller -c 1
tsm topology set-process -n node3 -pr clustercontroller -c 1
tsm pending-changes apply --ignore-warnings --ignore-prompt

say "Deploying cluster coordination service"
tsm stop
tsm topology deploy-coordination-service -n node1,node2,node3 --ignore-prompt
tsm start

say "Add Repository to node2 (before removing it from node 1)"
tsm topology set-process -n node2 -pr pgsql -c 1
tsm pending-changes apply --ignore-prompt

configure_worker node2
say "Apply changes"
tsm pending-changes apply --ignore-prompt

configure_primary
say "Apply changes"
tsm pending-changes apply --ignore-prompt

configure_worker node3
say "Apply changes"
tsm pending-changes apply --ignore-prompt

# Can't disable filestore
# Error message: Resource Conflict: Cannot remove filestore from node 'node1' without decommissioning hyper.
# Node: after booting the cluster, the TSM UI shows this component in "Synchronizing" state,
# this could be the reason for the error, and decommission could be the solution (have to test it from scratch)
say "Decommissioning and disable filestore on node1"
tsm topology filestore decommission -n node1 --ignore-prompt
tsm topology set-process -n node1 -pr filestore -c 0
say "Apply changes"
tsm pending-changes apply --ignore-prompt
