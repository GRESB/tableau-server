apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tableau-server.fullname" . }}-worker
  labels:
    {{- include "tableau-server.labels" . | nindent 4 }}
spec:
  replicas: 2
  serviceName: {{ include "tableau-server.fullname" . }}
  selector:
    matchLabels:
      {{- include "tableau-server.selectorLabels" . | nindent 6 }}
  volumeClaimTemplates:
    - metadata:
        name: tableau-server-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.tableauServer.dataDir.capacity }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tableau-server.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tableau-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: LICENSE_KEY
              value: "not-used"
            - name: BOOTSTRAP_INSTALL
              value: "1"
            - name: TSM_REMOTE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ include "tableau-server.fullname" . }}-{{ .Values.tableauServer.adminUserSecretNameSuffix }}"
                  key: tsm-password
          {{- if .Values.tableauServer.worker.probe.enabled }}
          {{- with .Values.tableauServer.worker.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tableauServer.worker.livenessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tableau-server-configuration
              mountPath: /docker/config/config.json
              subPath: config.json
            - name: tableau-server-data
              mountPath: /var/opt/tableau
            - name: tableau-server-bootstrap
              mountPath: /docker/config/bootstrap
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: tableau-server-configuration
          configMap:
            name: {{ include "tableau-server.configMap" . }}
        - name: tableau-server-bootstrap
          persistentVolumeClaim:
            claimName: {{ include "tableau-server.bootstrapPvc" . }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      dnsConfig:
        searches:
          - "{{ include "tableau-server.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.dns.clusterDomain }}"
          - "{{ .Release.Namespace }}.svc.{{ .Values.dns.clusterDomain }}"
          - "svc.{{ .Values.dns.clusterDomain }}"
        options:
          - name: ndots
            value: "5"
